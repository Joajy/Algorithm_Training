import java.awt.Point;
import java.io.*;
import java.util.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StringTokenizer st;
    static int n;
    static char[][] area;
    static boolean[][] vis;
    static final int[] dx = {0, 1, 0, -1};
    static final int[] dy = {1, 0, -1, 0};

    static void input() throws IOException {
        n = Integer.parseInt(br.readLine());
        area = new char[n][n];
        for(int i = 0;i < n; ++i) {
            String s = br.readLine();
            for(int j = 0; j < n; ++j) {
                area[i][j] = s.charAt(j);
            }
        }
    }

    static int search() {
        vis = new boolean[n][n];
        int answer = 0;
        for(int i = 0;i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                if(vis[i][j]) continue;
                vis[i][j] = true;
                ++answer;
                Deque<Point> q = new ArrayDeque<>();
                q.add(new Point(i, j));
                while (!q.isEmpty()) {
                    Point cur = q.poll();
                    for(int dir = 0; dir < 4; ++dir) {
                        int nx = cur.x + dx[dir];
                        int ny = cur.y + dy[dir];
                        if(!range(nx, ny) || vis[nx][ny]) continue;
                        if(area[i][j] != area[nx][ny]) continue;
                        vis[nx][ny] = true;
                        q.add(new Point(nx, ny));
                    }
                }
            }
        }
        return answer;
    }

    static void sameColored() {
        for(int i = 0;i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                if(area[i][j] == 'G') area[i][j] = 'R';
            }
        }
    }

    static void solution() {
        int first = search();
        sameColored();
        int second = search();
        System.out.println(first + " " + second);
    }

    static boolean range(int x, int y) {
        return x >= 0 && x < n && y >= 0 && y < n;
    }

    public static void main(String[] args) throws IOException {
        input();
        solution();
    }
}
