import java.awt.Point;
import java.util.*;
import java.io.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StringTokenizer st;
    static int n, m;
    static int[][] area, day;
    static final int[] dx = {0, 1, 0, -1};
    static final int[] dy = {1, 0, -1, 0};

    static void input() throws IOException {
        st = new StringTokenizer(br.readLine());
        m = Integer.parseInt(st.nextToken());
        n = Integer.parseInt(st.nextToken());
        area = new int[n][m];
        day = new int[n][m];
        for (int i = 0; i < n; ++i) {
            st = new StringTokenizer(br.readLine());
            for (int j = 0;j < m;++j) {
                area[i][j] = Integer.parseInt(st.nextToken());
                //아직 토마토가 없는 칸에 대하여 최대 일자로 세팅한다.
                if(area[i][j] == 0) day[i][j] = Integer.MAX_VALUE;
            }
        }
    }

    static void solution() {
        int answer = -1;
        Deque<Point> q = new ArrayDeque<>();
        //1. 초기 토마토 위치 입력
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < m; ++j) {
                if(area[i][j] == 1) q.add(new Point(i, j));
            }
        }
        //2. bfs로 며칠 후에 해당 칸으로 도달하는지에 대해 점검한다.
        while (!q.isEmpty()) {
            Point cur = q.poll();
            for (int dir = 0; dir < 4; ++dir) {
                int nx = cur.x + dx[dir];
                int ny = cur.y + dy[dir];
                if(nx < 0 || nx >= n || ny < 0 || ny >= m) continue;
                if(area[nx][ny] != 0 || day[cur.x][cur.y] + 1 >= day[nx][ny]) continue;
                day[nx][ny] = day[cur.x][cur.y] + 1;
                area[nx][ny] = 1;
                q.add(new Point(nx, ny));
            }
        }
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < m; ++j) {
                if(day[i][j] == Integer.MAX_VALUE) {
                    System.out.println(-1);
                    return;
                }
                if(area[i][j] == 1) answer = Math.max(answer, day[i][j]);
            }
        }
        System.out.println(answer);
    }

    public static void main(String[] args) throws IOException {
        input();
        solution();
    }
}
