import java.io.*;
import java.util.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StringTokenizer st;
    static int n, k;
    static int[] dp;

    static void input() throws IOException {
        st = new StringTokenizer(br.readLine());
        n = Integer.parseInt(st.nextToken());
        k = Integer.parseInt(st.nextToken());
        dp = new int[100001];
        Arrays.fill(dp, (int)1e9);
    }

    static void solution() {
        dp[n] = 0;
        Deque<Integer> q = new ArrayDeque<>();
        q.add(n);
        while (!q.isEmpty()) {
            int cur = q.poll();
            int[] dx = new int[]{cur - 1, cur + 1, cur << 1};
            for (int i = 0; i < 3; ++i) {
                if(dx[i] < 0 || dx[i] > 100000) continue;
                if(i == 2) {
                    if(dp[dx[i]] > dp[cur])  {
                        dp[dx[i]] = dp[cur];
                        q.add(dx[i]);
                    }
                } else if(dp[dx[i]] > dp[cur] + 1) {
                    dp[dx[i]] = dp[cur] + 1;
                    q.add(dx[i]);
                }
            }
        }
        System.out.println(dp[k]);
    }

    public static void main(String[] args) throws IOException {
        input();
        solution();
    }
}
