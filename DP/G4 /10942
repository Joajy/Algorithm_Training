import java.io.*;
import java.util.*;

public class Main {
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    static StringTokenizer st;
    static StringBuilder sb = new StringBuilder();
    static int n, m;
    static int[] num;
    static boolean[][] dp;

    public static void main(String[] args) throws IOException {
        n = Integer.parseInt(br.readLine());
        st = new StringTokenizer(br.readLine());
        num = new int[n + 1];
        for (int i = 1; i <= n; ++i) {
            num[i] = Integer.parseInt(st.nextToken());
        }
        dp = new boolean[n + 1][n + 1];
        for (int i = 1; i <= n; ++i) {
            dp[i][i] = true;
        }
        for (int mid = 1; mid <= n; ++mid) {
            int s = mid - 1;
            int e = mid + 1;
            //양쪽 값이 같은지 탐색
            while (s >= 1 && e <= n) {
                if (num[s] != num[e]) {
                    break;
                }
                dp[s][e] = true;
                --s;
                ++e;
            }
            //해당 index의 값과 같은지 확인
            e = mid + 1;
            while (e <= n) {
                if (num[mid] != num[e]) {
                    break;
                }
                dp[mid][e] = true;
                ++e;
            }
        }
        m = Integer.parseInt(br.readLine());
        for (int i = 0; i < m; ++i) {
            st = new StringTokenizer(br.readLine());
            int s = Integer.parseInt(st.nextToken());
            int e = Integer.parseInt(st.nextToken());
            if(dp[s][e]) sb.append(1).append('\n');
            else sb.append(0).append('\n');
        }
        System.out.print(sb);
    }
}
